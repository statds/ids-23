# Exercises

1. Pick up Git basics and set up an account at GitHub if you don't have
   one. Please practice the tips on Git in the notes. Make sure you have at
   least 10 commits in the repo, each with informative message. Keep checking
   the status of your repo with `git status`. My grader will grade the repo.
    1. Clone the `ids-s23` repo to your own computer.
    1. Add your name and wishes to the Wishlist; commit with an informative message.
	1. Remove the `Last, First` entry from the list; commit.
	1. Create a new file called `add.qmd` containing a few lines of texts; commit.
	1. Remove `add.qmd` (pretending that this is by accident; commit.
    1. Recover the accidently removed file `add.qmd`; add a long line (a
       paragraph without a hard break); add a short line (under 80 characters);
       commit.
    1. Change one word in the long line and one word in the short line; use
	`git diff` to see the difference from the last commit; commit.
	1. Put the repo into the GitHub Classroom homework repo with `git remote add` and `git push`.

1. Get ready for contributing to the classnotes.
    1. Create a fork of the `ids-s23` repo into your own GitHub account. 
	1. Clone it to your local computer. 
	1. Make a new branch to experiment with your changes.
	1. Checkout your branch and add your wishes to the wish list; push to your
       GitHub account.
    1. Make a pull request to my `ids-s23` repo from your fork at GitHub. Make
       sure you have clear messages to document the changes.

1. Write a function to demonstrate the Monty Hall problem through
   simulation. The function takes two arguments `ndoors` and
   `ntrials`, representing the number of doors in the experiment and
   the number of trails in a simulation, respectively. The function
   should return the proportion of wins for both the switch and
   no-switch strategy. Apply your function with 3 doors and 5 doors,
   both with 1000 trials. Include sufficient text around the code to explain
   your them.

1. Write a function to do a Monte Carlo approximation of $\pi$. The
   function takes a Monte Carlo sample size `n` as input, and returns
   a point estimate of $\pi$ and a 95% confidence interval. Apply your
   function with sample size 1000, 2000, 4000, and 8000. Repeat the experiment 
   1000 times for each sample size and check the empirical probability that the
   confidence intervals cover the true value of $\pi$. Comment on
   the results.

1. Find the first 10-digit prime number occurring in consecutive
   digits of $e$. This was a
   [Google recruiting ad](http://mathworld.wolfram.com/news/2004-10-13/google/)

1. The NYC motor vehicle collisions data with documentation is available from
   [NYC Open
   Data](https://data.cityofnewyork.us/Public-Safety/Motor-Vehicle-Collisions-Crashes/h9gi-nx95).
   The raw data needs some cleaning.
    1. Use the filter from the website to download the crash data of January
       2023; save it under a directory `data` with an informative name
	   (e.g., `nyc_crashes_202301.csv`).
	1. Get basic summaries of each variable: missing percentage; descriptive
       statistics for continuous variables; frequency tables for discrete
       variables.
	1. Are the `LATITUDE` and `LONGITIDE` values all look legitimate? If not
       (e.g., zeroes), code them as missing values.
	1. If `OFF STREET NAME` is not missing, are there any missing `LATITUDE` and
	   `LONGITUDE`? If so, geocode the addresses.
	1. (Optional) Are the missing patterns of `ON STREET NAME` and `LATITUDE` the same?
       Summarize the missing patterns by a cross table. If `ON STREET NAME` and
       `CROSS STREET NAME` are available, use geocoding by intersection to fill
	   the `LATITUDE` and `LONGITUDE`.
	1. Are `ZIP CODE` and `BOROUGH` always missing together? If `LATITUDE` and
       `LONGITUDE` are available, use reverse geocoding to fill the `ZIP CODE`
       and `BOROUGH`.
	1. Print the whole frequency table of
		`CONTRIBUTING FACTOR VEHICLE 1`. 
	   Convert lower cases to uppercases and check the frequencies again.
	1. Provided an opportunity to meet the data provider, what suggestions do
       you have to make the data better based on your data exploration
       experience?
